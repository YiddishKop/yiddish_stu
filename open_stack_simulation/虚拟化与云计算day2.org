* 虚拟化技术分类
  - 平台虚拟化 ： os虚拟
  - 资源虚拟化 ： cpu，内存等虚拟
  - 程序虚拟化 ： 模拟仿真程序
* 设计纯软vmm的挑战
  :: HostOs <-vmm <-GuestOs  
  1. 确保vmm控制所有系统资源
     - [科普]x86 86-64 ia64
	: ia-32(x86)是一整套处理器32bit框架，包括硬件cpu和处理器指令集
	: 86-64是对x86的一种简单扩展，支持64bit并兼容32bit，如i5,i7cpu
        : ia-64是intel纯64架构-cpu,数据总线地址总线等。不兼容x86，不兼容i5,i7
     - 确保 VMM 控制所有的系统资源
       - x86处理器4个特权级别 Ring0~3(Ring2不用)
       - 操作系统运行在 Ring 0，用户进程运行在 Ring 3 级
       - VMM 自己必须运行在 Ring 0 级，Guest OS Ring 1/3
     - Guest OS 频繁访问特权资源
       - guestOs每次访问特权指令都由VMM模拟执行，VMM是其代理啊
     - 转发虚拟的中断和异常
       - 所有的外部中断和主机处理器的异常直接由 VMM 接管，VMM 构造必需的虚拟中断和异常，然后转发给 Guest OS
     - 处理 Guest OS 中的系统调用
       - 欺骗是很累的，为了圆一个简单的'谎言'，经常要绕一大圈
       - 操作系统一般使用 SYSENTER/SYSEXIT 指令对来实现快速系统调用
       - VMM模拟这俩指令要慢死
     - 处理 Guest OS 的缺页异常
       - 内存是一种非常重要的系统资源，VMM 必须全权管理
       - Guest OS 理解的物理地址只是客户机物理地址（Guest Physical Address），并不是最终的主机物理地址（Host Physical Address）
       - [科普]x86三种模式
	 #+BEGIN_SRC 
	 1. 实模式-'老实'模式-直接访问物理地址-20地址线-段地址(2^4个)+偏移地址(2^16)=地址
	    缺点: 
                没有分开系统和用户程序，不安全
                无法满足程序对大内存需要
         2. 保护模式->=32位地址线-'保护系统数据'模式-引入逻辑地址-MMU(内存管理单元)-分段/分页管理
         3. 虚拟模式-保护模式下'虚拟16位程序'实模式-向前兼容的考虑
	 #+END_SRC

       - 
       - 
	 
